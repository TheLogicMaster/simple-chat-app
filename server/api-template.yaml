openapi: "3.0.1"
info:
  title: "simple-chat-api"
  version: "2021-03-22 07:39:20UTC"
paths:
  /conversation-get:
    get:
      responses:
        default:
          description: "Get a conversation"
      security:
      - jwt-auth: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:{ID}:function:conversation-get/invocations"
        connectionType: "INTERNET"
  /conversation-list:
    get:
      responses:
        default:
          description: "Get conversations list"
      security:
      - jwt-auth: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:{ID}:function:conversation-list/invocations"
        connectionType: "INTERNET"
  /friend-list:
    get:
      responses:
        default:
          description: "Get friends list"
      security:
      - jwt-auth: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:{ID}:function:friend-list/invocations"
        connectionType: "INTERNET"
  /{proxy+}:
    options:
      responses:
        default:
          description: "A default route to allow CORS requests"
  /conversation-create:
    post:
      responses:
        default:
          description: "Create a new conversation"
      security:
      - jwt-auth: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:{ID}:function:conversation-create/invocations"
        connectionType: "INTERNET"
  /conversation-delete:
    post:
      responses:
        default:
          description: "Delete a conversation"
      security:
      - jwt-auth: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:{ID}:function:conversation-delete/invocations"
        connectionType: "INTERNET"
  /conversation-invite:
    post:
      responses:
        default:
          description: "Invite someone to a conversation"
      security:
      - jwt-auth: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:{ID}:function:conversation-invite/invocations"
        connectionType: "INTERNET"
  /conversation-leave:
    post:
      responses:
        default:
          description: "Leave a conversation"
      security:
      - jwt-auth: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:{ID}:function:conversation-leave/invocations"
        connectionType: "INTERNET"
  /send-message:
    post:
      responses:
        default:
          description: "Send a message in a conversation"
      security:
      - jwt-auth: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:{ID}:function:send-message/invocations"
        connectionType: "INTERNET"
  /friend-add:
    post:
      responses:
        default:
          description: "Add a friend"
      security:
      - jwt-auth: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:{ID}:function:friend-add/invocations"
        connectionType: "INTERNET"
  /friend-delete:
    post:
      responses:
        default:
          description: "Delete a friend"
      security:
      - jwt-auth: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:{ID}:function:friend-delete/invocations"
        connectionType: "INTERNET"
  /conversation-kick:
    post:
      responses:
        default:
          description: "Kick a non-admin member from a conversation"
      security:
      - jwt-auth: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:{ID}:function:conversation-kick/invocations"
        connectionType: "INTERNET"
  /conversation-promote:
    post:
      responses:
        default:
          description: "Promote a conversation member to admin"
      security:
      - jwt-auth: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:{ID}:function:conversation-promote/invocations"
        connectionType: "INTERNET"
components:
  securitySchemes:
    jwt-auth:
      type: "oauth2"
      flows: {}
      x-amazon-apigateway-authorizer:
        identitySource: "$request.header.Authorization"
        jwtConfiguration:
          audience:
          - "{CLIENT}"
          issuer: "https://cognito-idp.us-east-1.amazonaws.com/{POOL}"
        type: "jwt"
x-amazon-apigateway-cors:
  allowMethods:
  - "*"
  allowHeaders:
  - "*"
  maxAge: 0
  allowCredentials: false
  allowOrigins:
  - "*"
x-amazon-apigateway-importexport-version: "1.0"
